import path from "path";
import Database from "better-sqlite3";
import type { GameState } from "../../../shared/types";

const db = new Database(path.resolve(__dirname, "../game.db"));

// Create (if needed) the table
db
  .prepare(`
    CREATE TABLE IF NOT EXISTS state (
      key TEXT PRIMARY KEY,
      data TEXT NOT NULL,
      updatedAt INTEGER NOT NULL
    )
  `)
  .run();

// Prepare a typed statement for loading
const loadStmt = db.prepare<{ data: string }>(
  `SELECT data FROM state WHERE key = 'main'`
);

// Load the last‚Äêsaved state, or null if none
export function loadState(): GameState | null {
  const row = loadStmt.get();   // typed as { data: string } | undefined
  if (!row) return null;
  return JSON.parse(row.data) as GameState;
}

// Save (upsert) the current state
export function saveState(state: GameState): void {
  const json = JSON.stringify(state);
  const now  = Date.now();

  db
    .prepare(`
      INSERT INTO state (key, data, updatedAt)
      VALUES ('main', @data, @now)
      ON CONFLICT(key) DO UPDATE SET
        data      = excluded.data,
        updatedAt = excluded.updatedAt
    `)
    .run({ data: json, now });
}
